syntax = "proto3";
package dualitylabs.duality.incentives;

import "incentives/incentive_plan.proto";
// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/duality-labs/duality/x/incentives/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateIncentivePlan(MsgCreateIncentivePlan) returns (MsgCreateIncentivePlanResponse);
  rpc UpdateIncentivePlan(MsgUpdateIncentivePlan) returns (MsgUpdateIncentivePlanResponse);
  rpc DeleteIncentivePlan(MsgDeleteIncentivePlan) returns (MsgDeleteIncentivePlanResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateIncentivePlan {
  string creator = 1;
  string index = 2;

  uint64 startDate = 3;
  uint64 endDate = 4;
  string tradingPair = 5;
  cosmos.base.v1beta1.Coin totalAmount = 6 [(gogoproto.nullable) = false];
  int64 startTick = 7;
  int64 endTick = 8;
}
message MsgCreateIncentivePlanResponse {}

message MsgUpdateIncentivePlan {
  string creator = 1;
  string index = 2;

  uint64 startDate = 3;
  uint64 endDate = 4;
  string tradingPair = 5;
  cosmos.base.v1beta1.Coin totalAmount = 6 [(gogoproto.nullable) = false];
  int64 startTick = 7;
  int64 endTick = 8;
}
message MsgUpdateIncentivePlanResponse {}

message MsgDeleteIncentivePlan {
  string creator = 1;
  string index = 2;
}
message MsgDeleteIncentivePlanResponse {}

// this line is used by starport scaffolding # proto/tx/message
