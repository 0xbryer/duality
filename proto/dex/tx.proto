syntax = "proto3";
package nicholasdotsol.duality.dex;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/NicholasDotSol/duality/x/dex/types";

// Msg defines the Msg service.
service Msg {
      rpc AddLiquidity(MsgAddLiquidity) returns (MsgAddLiquidityResponse);
  rpc RemoveLiquidity(MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);
  rpc CreatePair(MsgCreatePair) returns (MsgCreatePairResponse);
  rpc Swap(MsgSwap) returns (MsgSwapResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgAddLiquidity {
  string creator = 1;
  string tokenA = 2;
  string tokenB = 3;
  string tokenDirection = 4;
  int32 index = 5;
  string amountA = 6;
  string amountB = 7;
  string price = 8;
  string fee = 9;
  string orderType = 10;
  string receiver = 11;
}

message MsgAddLiquidityResponse {

}

message MsgRemoveLiquidity {
  string creator = 1;
  string tokenA = 2;
  string tokenB = 3;
  int32 index = 4;
  string shares = 5;
  string price = 6;
  string fee = 7;
  string orderType = 8;
  string receiver = 9;
}

message MsgRemoveLiquidityResponse {
}

message MsgCreatePair {
  string creator = 1;
  string tokenA = 2;
  string tokenB = 3;
  string tokenDirection = 4;
  int32 index = 5;
  string amountA = 6;
  string amountB = 7;
  string price = 8;
  string fee = 9;
  string orderType = 10;
  string receiver = 11;
}

message MsgCreatePairResponse {
}

message MsgSwap {
  string creator = 1;
  string tokenIn = 2;
  string tokenOut = 3;
  string amountIn = 4;
  string minOut = 5;
}

message MsgSwapResponse {
}

// this line is used by starport scaffolding # proto/tx/message
