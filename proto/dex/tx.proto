syntax = "proto3";
package nicholasdotsol.duality.dex;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/NicholasDotSol/duality/x/dex/types";
import "gogoproto/gogo.proto";
// Msg defines the Msg service.
service Msg {
      rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  rpc Withdrawl(MsgWithdrawl) returns (MsgWithdrawlResponse);
  rpc Swap(MsgSwap) returns (MsgSwapResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgDeposit {
  string creator = 1;
  string receiver = 2;
  string tokenA = 3;
  string tokenB = 4;
  string amountA = 5;
  string amountB = 6;
  int64 tickIndex = 7;
  uint64 feeIndex = 8;
  
}

message MsgDepositResponse {
}

message MsgWithdrawl {
  string receiver = 1;
  string creator = 2;
  string tokenA = 3;
  string tokenB = 4;
  repeated string sharesToRemove = 5  [
      (gogoproto.moretags)   = "yaml:\"sharesToRemove\"",
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable)   = false,
      (gogoproto.jsontag) = "sharesToRemove"
  ]; 
  repeated int64 tickIndexes = 6;
  repeated uint64 feeIndexes = 7;
  
}

message MsgWithdrawlResponse {
}

message MsgSwap {
  string creator = 1;
  string receiver = 2;
  string tokenA = 3;
  string tokenB = 4;
  string amountIn = 5;
  string tokenIn = 6;
  string minOut = 7;
  
}

message MsgSwapResponse {
}

// this line is used by starport scaffolding # proto/tx/message
